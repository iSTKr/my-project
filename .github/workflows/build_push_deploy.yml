name: Build, push and deploy

on:
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: 'eu-central-1'

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract tag version
        run: |
          echo "CHART_VERSION=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_ENV

      - name: Extract versions from Chart.yaml
        run: |
          echo "CHART_VERSION=$(grep '^version:' Chart.yaml | awk '{print $2}')" >> $GITHUB_ENV
          echo "APP_VERSION=$(grep '^appVersion:' Chart.yaml | awk '{print $2}' | tr -d '\"')" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ vars.ECR_REPOSITORY }}
          docker build -t my-project:$APP_VERSION .
          docker tag my-project:$APP_VERSION ${{ vars.ECR_REPOSITORY }}/my-project:$APP_VERSION
          docker push ${{ vars.ECR_REPOSITORY }}/my-project:$APP_VERSION

      - name: Package and push Helm chart
        run: |
          cd kubernetes
          helm package app-chart
          aws ecr get-login-password --region ${{ env.AWS_DEFAULT_REGION }} | helm registry login --username AWS --password-stdin ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.eu-central-1.amazonaws.com
          helm push "app-chart-$CHART_VERSION.tgz" oci://${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com/app-chart

      - name: Install Helm chart
        run: |
          cd kubernetes
          aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name app-eks-cluster
          helm install app-chart oci://${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com/app-chart --version $CHART_VERSION
