name: Build, push and deploy

on:
  push:
    tags:
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: 'eu-central-1'

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download a Terrafrom outputs && parse
        run: |
          aws s3 cp s3://app-s3-bucket-tfstate/outputs.json .
          echo "HELM_ECR_REPO=$(jq -r .ecr_helm_repository_name.value outputs.json)" >> $GITHUB_ENV
          echo "IMAGE_ECR_REPO=$(jq -r .ecr_image_repository_name.value outputs.json)" >> $GITHUB_ENV
          echo "EKS_CLUSTER_NAME=$(jq -r .eks_cluster_name.value outputs.json)" >> $GITHUB_ENV

      - name: Extract versions from Chart.yaml
        run: |
          cd kubernetes/app-chart
          echo "CHART_VERSION=$(grep '^version:' Chart.yaml | awk '{print $2}')" >> $GITHUB_ENV
          echo "APP_VERSION=$(grep '^appVersion:' Chart.yaml | awk '{print $2}' | tr -d '\"')" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          aws ecr get-login-password --region ${{ env.AWS_DEFAULT_REGION }} | docker login --username AWS --password-stdin ${{ env.IMAGE_ECR_REPO }}
          docker build -t my-project:${{ env.APP_VERSION }} .
          docker tag my-project:${{ env.APP_VERSION }} ${{ env.IMAGE_ECR_REPO }}:${{ env.APP_VERSION }}
          docker push ${{ env.IMAGE_ECR_REPO }}:${{ env.APP_VERSION }}

      - name: Package and push Helm chart
        run: |
          cd kubernetes
          sed -i 's|image: image_repo|image: ${{ env.IMAGE_ECR_REPO }}:${{ env.APP_VERSION }}|' app-chart/values.yaml
          cat app-chart/values.yaml
          helm package app-chart
          aws ecr get-login-password --region ${{ env.AWS_DEFAULT_REGION }} | helm registry login --username AWS --password-stdin ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com
          helm push "app-chart-${{ env.CHART_VERSION }}.tgz" oci://${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com/

      - name: Install Helm chart
        run: |
          cd kubernetes
          aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name ${{ env.EKS_CLUSTER_NAME }}
          helm upgrade --install app-chart oci://${{ env.HELM_ECR_REPO }} --version ${{ env.CHART_VERSION }}
